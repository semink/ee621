close all;
rng(1); % A fixed random seed
%% Expectation-Maximization algorithm
addpath("modules")
n = 300;
k = 5;  % Number of clusters
mu_true = 10*rand(k,2);
R_true = 5*rand(2,1,k);

% options.report = @(x)struct('q', q(x));
% options.niter = 4000;   % number of iteration 
% 
% 
% c = perform_em(y, 4, p, options);
% 
% % Plot
% figure;
% semilogy(Q(2:end)-min(Q(2:end)), 'k', 'LineWidth', 2);
% xlabel("iteration index n")
% ylabel("q(w_n)-q(w_n^*)")
% axis tight; grid on; title('Learning curve');
